# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: fast-zk-rollup-ci

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ubuntu-latest
    env:
      LOCAL_HADOOP_IMAGE_NAME: ycryptx/mina:hadoop
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 18.12
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: actions/cache@v3
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
      - uses: docker/setup-buildx-action@v1
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored in GitHub Secrets
      - uses: docker/build-push-action@v2
        with:
          context: accumulator/infra/hadoop-single-node-cluster
          tags: ${{ env.LOCAL_HADOOP_IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
      - name: Spin up local accumulator
        run: make up-local-accumulator
      - name: Sleep for 15s seconds
        run: sleep 15s
        shell: bash
      - name: add test config
        working-directory: ./sequencer
        run: cp .env.example .env
      - name: install dependencies
        run: yarn  install
      # - name: run integration tests
      #   run: yarn sequencer test
  publish:
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
          verbose: false
          arch: amd64
          rootdir: ""
          workdir: ""
      - name: Push EMR Mapper/Reducer/Bootstrap to S3
        run: |
            aws s3 cp ./map-reduce-scripts/scripts/mapper.js s3://${{ env.DATA_BUCKET_NAME }}/mapper.js
            aws s3 cp ./map-reduce-scripts/scripts/reducer.js s3://${{ env.DATA_BUCKET_NAME }}/reducer.js
            aws s3 cp ./accumulator/infra/emr_bootstrap_script.sh s3://${{ env.DATA_BUCKET_NAME }}/emr_bootstrap_script.sh
        env:
          DATA_BUCKET_NAME: mina-fast-zk-rollup-emr-data
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
      - name: ECR Registry login
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: "us-east-1"
      - name: Push to ECR registry
        uses: docker/build-push-action@v2
        with:
          context: sequencer
          tags: public.ecr.aws/y6u2m5w7/zk-rollup-docker-registry:latest
          push: true
